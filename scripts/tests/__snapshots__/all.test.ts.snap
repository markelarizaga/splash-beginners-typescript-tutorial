// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`tsc > Should have the correct TypeScript errors 1`] = `""`;

exports[`vitest > Should have the correct Vitest errors 1`] = `
{
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/01-number.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/01-number.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/02-object-param.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/02-object-param.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/02-object-param.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add the two numbers together",
          "status": "passed",
          "title": "Should add the two numbers together",
        },
      ],
      "message": "",
      "name": "src/02-object-param.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with just the first name",
          "status": "passed",
          "title": "Should work with just the first name",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with the first and last name",
          "status": "passed",
          "title": "Should work with the first and last name",
        },
      ],
      "message": "",
      "name": "src/03-optional-properties.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with just the first name",
          "status": "passed",
          "title": "Should work with just the first name",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with the first and last name",
          "status": "passed",
          "title": "Should work with the first and last name",
        },
      ],
      "message": "",
      "name": "src/03-optional-properties.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with just the first name",
          "status": "passed",
          "title": "Should work with just the first name",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with the first and last name",
          "status": "passed",
          "title": "Should work with the first and last name",
        },
      ],
      "message": "",
      "name": "src/04-optional-params.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with just the first name",
          "status": "passed",
          "title": "Should work with just the first name",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should work with the first and last name",
          "status": "passed",
          "title": "Should work with the first and last name",
        },
      ],
      "message": "",
      "name": "src/04-optional-params.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should get the user id",
          "status": "passed",
          "title": "Should get the user id",
        },
      ],
      "message": "",
      "name": "src/05-assigning-types-to-variables.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should get the user id",
          "status": "passed",
          "title": "Should get the user id",
        },
      ],
      "message": "",
      "name": "src/05-assigning-types-to-variables.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-unions.problem.ts",
      "name": "src/06-unions.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/06-unions.solution.ts",
      "name": "src/06-unions.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-arrays.problem.ts",
      "name": "src/07-arrays.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-arrays.solution.1.ts",
      "name": "src/07-arrays.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/07-arrays.solution.2.ts",
      "name": "src/07-arrays.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return a valid user",
          "status": "passed",
          "title": "Should return a valid user",
        },
      ],
      "message": "",
      "name": "src/08-function-return-type-annotations.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return a valid user",
          "status": "passed",
          "title": "Should return a valid user",
        },
      ],
      "message": "",
      "name": "src/08-function-return-type-annotations.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/09-promises.problem.ts",
      "name": "src/09-promises.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/09-promises.solution.1.ts",
      "name": "src/09-promises.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/09-promises.solution.2.ts",
      "name": "src/09-promises.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/09-promises.solution.3.ts",
      "name": "src/09-promises.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should contain Jimi and Eric",
          "status": "passed",
          "title": "Should contain Jimi and Eric",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should give a type error when you try to pass a non-string",
          "status": "passed",
          "title": "Should give a type error when you try to pass a non-string",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should be typed as an array of strings",
          "status": "passed",
          "title": "Should be typed as an array of strings",
        },
      ],
      "message": "",
      "name": "src/10-set.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should contain Jimi and Eric",
          "status": "passed",
          "title": "Should contain Jimi and Eric",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should give a type error when you try to pass a non-string",
          "status": "passed",
          "title": "Should give a type error when you try to pass a non-string",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should be typed as an array of strings",
          "status": "passed",
          "title": "Should be typed as an array of strings",
        },
      ],
      "message": "",
      "name": "src/10-set.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add values to the cache",
          "status": "passed",
          "title": "Should add values to the cache",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should remove values from the cache",
          "status": "passed",
          "title": "Should remove values from the cache",
        },
      ],
      "message": "",
      "name": "src/11-record.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add values to the cache",
          "status": "passed",
          "title": "Should add values to the cache",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should remove values from the cache",
          "status": "passed",
          "title": "Should remove values from the cache",
        },
      ],
      "message": "",
      "name": "src/11-record.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add values to the cache",
          "status": "passed",
          "title": "Should add values to the cache",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should remove values from the cache",
          "status": "passed",
          "title": "Should remove values from the cache",
        },
      ],
      "message": "",
      "name": "src/11-record.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should add values to the cache",
          "status": "passed",
          "title": "Should add values to the cache",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should remove values from the cache",
          "status": "passed",
          "title": "Should remove values from the cache",
        },
      ],
      "message": "",
      "name": "src/11-record.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the amount when passed an object",
          "status": "passed",
          "title": "Should return the amount when passed an object",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the amount when passed a number",
          "status": "passed",
          "title": "Should return the amount when passed a number",
        },
      ],
      "message": "",
      "name": "src/12-typeof-narrowing.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the amount when passed an object",
          "status": "passed",
          "title": "Should return the amount when passed an object",
        },
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the amount when passed a number",
          "status": "passed",
          "title": "Should return the amount when passed a number",
        },
      ],
      "message": "",
      "name": "src/12-typeof-narrowing.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the message when it fails",
          "status": "passed",
          "title": "Should return the message when it fails",
        },
      ],
      "message": "",
      "name": "src/13-catch-blocks.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the message when it fails",
          "status": "passed",
          "title": "Should return the message when it fails",
        },
      ],
      "message": "",
      "name": "src/13-catch-blocks.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the message when it fails",
          "status": "passed",
          "title": "Should return the message when it fails",
        },
      ],
      "message": "",
      "name": "src/13-catch-blocks.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should return the message when it fails",
          "status": "passed",
          "title": "Should return the message when it fails",
        },
      ],
      "message": "",
      "name": "src/13-catch-blocks.solution.3.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/14-extends.problem.ts",
      "name": "src/14-extends.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/14-extends.solution.ts",
      "name": "src/14-extends.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/15-intersection.problem.ts",
      "name": "src/15-intersection.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/15-intersection.solution.ts",
      "name": "src/15-intersection.solution.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/16-omit-and-pick.problem.ts",
      "name": "src/16-omit-and-pick.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/16-omit-and-pick.solution.1.ts",
      "name": "src/16-omit-and-pick.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/16-omit-and-pick.solution.2.ts",
      "name": "src/16-omit-and-pick.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/17-function-types.problem.ts",
      "name": "src/17-function-types.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/17-function-types.solution.1.ts",
      "name": "src/17-function-types.solution.1.ts",
      "status": "passed",
    },
    {
      "assertionResults": [],
      "message": "No test found in suite src/17-function-types.solution.2.ts",
      "name": "src/17-function-types.solution.2.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should create the user, then get them",
          "status": "passed",
          "title": "Should create the user, then get them",
        },
      ],
      "message": "",
      "name": "src/18-function-types-with-promises.problem.ts",
      "status": "passed",
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "",
          ],
          "failureMessages": [],
          "fullName": " Should create the user, then get them",
          "status": "passed",
          "title": "Should create the user, then get them",
        },
      ],
      "message": "",
      "name": "src/18-function-types-with-promises.solution.ts",
      "status": "passed",
    },
  ],
}
`;
